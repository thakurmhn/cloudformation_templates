Parameters:

  MYAMI:
    Description: AMI ID of WEB Server to be launched.
    Type: String
    Default: ami-a4c7edb2

  MYINSTANCETYPE:
    Description: Instance Type of the WEB Server
    Type: String
    Default: t2.micro
    AllowedValues:
      - t1.micro
      - t2.nano
      - t2.micro
      - t2.small
    ConstraintDescription: must be a valid EC2 instance type.

  MYINSTANCEAZ:
    Description: Enter the availability zone
    Default: "-"
    Type: AWS::EC2::AvailabilityZone::Name

  MYVPC:
    Description: VPC to operate in
    Type: AWS::EC2::VPC::Id

  #MYSUBNETID:
  #  Description: Subnet IDs that is a List of Subnet Id
  #  Type: "List<AWS::EC2::Subnet::Id>"


  #MYSUBNETID:
  #  Description: List of subnet available in MYVPC
  #  Type: CommaDelimitedList
  #  Default: "subnet-0d4c1b3f3800c5ccf, subnet-0553207fa66365920, subnet-026590451e637dfe8, subnet-056fd444ebb0ef62b"

  MYSUBNETID:
    Type: AWS::EC2::Subnet::Id
    Description: SubnetId of an existing subnet (for the primary network) in your
      Virtual Private Cloud (VPC)
    ConstraintDescription: must be an existing subnet in the selected Virtual Private Cloud.

  MYKEYNAME:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances. Linked to AWS Parameter
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.

  SecurityGroupIngressCIDR:
    Description: The IP address range that can be used to communicate to the EC2 instances
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.

  SecurityGroupPort:
    Description: Simple Description of a Number Parameter, with MinValue and MaxValue
    Type: Number
    MinValue: 20
    MaxValue: 65535

  PrimaryIPAddress:
    Type: String
    Description: Primary private IP. This must be a valid IP address for Subnet
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})"
    ConstraintDescription: must be a valid IP address of the form x.x.x.x.

#Mappings:



#Conditions:

Resources:
  MYSSHSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref MYVPC
      GroupDescription: SG for SSH access
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: !Ref SecurityGroupPort
        ToPort: !Ref SecurityGroupPort
        CidrIp: !Ref SecurityGroupIngressCIDR

  MyEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone: !Ref MYINSTANCEAZ
      ImageId: !Ref MYAMI
      InstanceType: !Ref MYINSTANCETYPE
      KeyName: !Ref MYKEYNAME
      NetworkInterfaces:
      - NetworkInterfaceId: !Ref Eth0
        DeviceIndex: '0'
      Tags:
      - Key: Name
        Value: TEST-SERVER1

  MyEIP:
    Type: AWS::EC2::EIP
    Properties:
      #InstanceId: !Ref MyEC2Instance
      Domain: vpc
  EIPAssoc:
    Type: AWS::EC2::EIPAssociation
    Properties:
      NetworkInterfaceId: !Ref Eth0
      AllocationId: !GetAtt [MyEIP, AllocationId]

  Eth0:
    Type: AWS::EC2::NetworkInterface
    Properties:
      Description: eth0
      GroupSet: [!Ref MYSSHSG]
      PrivateIpAddresses:
      - PrivateIpAddress: !Ref PrimaryIPAddress
        Primary: 'true'
      SubnetId: !Ref MYSUBNETID
      Tags:
      - Key: Name
        Value: Interface 0
      - Key: Interface
        Value: eth0

Outputs:
  MYSERVER:
    Value:
      Ref: MyEC2Instance
    Export:
      Name: MYTEST-SERVER
